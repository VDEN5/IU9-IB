(define (scanner res word)
  (let ((symb (read-char)))
    (cond ((eof-object? symb)
           (reverse res))
          ((and (char-whitespace? symb)
                (null? word))
           (scanner res '()))
          ((and (char-whitespace? symb)
                (not (null? word)))
           (scanner (cons (list->string (reverse word)) res) '()))
          (else (scanner res (cons symb word))))))
(define (read-words)(scanner '() '()))